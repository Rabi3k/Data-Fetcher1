/*!
 * jtree JavaScript Library v1.0
 *
 * Includes jquery.js
 * https://jquery.com/
 * 
 * Author : Mayank Pandey
 * 
 * Date: 2017-March-05 Time: 02:30
 *
 */
!function($){var attributes=null,targetElement=null;$.fn.treejs=function(options){if(targetElement=this,"html"==(attributes=$.extend({url:null,sourceType:"html",initialState:"close",dataSource:null},options)).sourceType){if(null==attributes.url)return alert("Error: missing ajax url"),!1;$.ajax({url:attributes.url,method:"get",async:!1,data:{sourceType:attributes.sourceType},success:function(response){$(targetElement).html(response)}})}else{if(null==attributes.dataSource)return alert("Error: Missing dataSource JSON object"),!1;var data=attributes.dataSource,html="";for(var i in data)if(data.hasOwnProperty(i)){for(var j in html+='<ul class="jtree_parent_node"> <li> <span class="jtree_expand jtree_node_open"> </span> <label><input type="checkbox" id="'+data[i].parentNodeId+'" parent-id="" class="jtree_parent_checkbox"> '+data[i].parentNodeTxt+"</label>",html+='<ul class="jtree_child_node">',data[i].childNodes)data[i].childNodes.hasOwnProperty(j)&&(html+='<li><label><input type="checkbox" id="'+data[i].childNodes[j].id+'" parent-id="'+data[i].parentNodeId+'" class="jtree_child_checkbox"> '+data[i].childNodes[j].name+" </label></li>");html+="</ul>",html+="</li></ul>"}$(targetElement).html(html)}"close"==attributes.initialState?($(".jtree_child_node").hide(),$(".jtree_expand").removeClass("jtree_node_open").addClass("jtree_node_close")):($(".jtree_child_node").show(),$(".jtree_expand").removeClass("jtree_node_close").addClass("jtree_node_open")),$(document).on("click",".jtree_expand",(function(){$(this).hasClass("jtree_node_open")?($(this).removeClass("jtree_node_open").addClass("jtree_node_close"),$(this).next().next("ul").hide()):($(this).removeClass("jtree_node_close").addClass("jtree_node_open"),$(this).next().next("ul").show())})),$(document).on("change",".jtree_parent_checkbox",(function(){if($(this).is(":checked")){var childUL=$(this).parent().next("ul");$(childUL).each((function(){$(this).find("li > label").find('input[type="checkbox"]').prop("checked",!0)}))}else{var childUL=$(this).parent().next("ul");$(childUL).each((function(){$(this).find("li > label").find('input[type="checkbox"]').prop("checked",!1)}))}}))},$.fn.extend({getCheckedParentNodes:function(){return $(this).find(".jtree_parent_checkbox:checked")},getUncheckedParentNodes:function(){return $(this).find(".jtree_parent_checkbox:not(:checked)")},getCheckedChildNodes:function(){return $(this).find(".jtree_child_checkbox:checked")},getUncheckedChildNodes:function(){return $(this).find(".jtree_child_checkbox:not(:checked)")}}),$.fn.extend({refresh:function(){if("html"==attributes.sourceType){if(null==attributes.url)return alert("Error: missing ajax url"),!1;$.ajax({url:attributes.url,method:"get",async:!1,data:{sourceType:attributes.sourceType},success:function(response){$(targetElement).html(response)}})}else{if(null==attributes.dataSource)return alert("Error: Missing dataSource JSON object"),!1;var data=attributes.dataSource,html="";for(var i in data)if(data.hasOwnProperty(i)){for(var j in html+='<ul class="jtree_parent_node"> <li> <span class="jtree_expand jtree_node_open"> </span> <label><input type="checkbox" id="'+data[i].parentNodeId+'" parent-id="" class="jtree_parent_checkbox">'+data[i].parentNodeTxt+"</label>",html+='<ul class="jtree_child_node">',data[i].childNodes)data[i].childNodes.hasOwnProperty(j)&&(html+='<li><label><input type="checkbox" id="'+data[i].childNodes[j].id+'" parent-id="'+data[i].parentNodeId+'" class="jtree_child_checkbox"> '+data[i].childNodes[j].name+" </label></li>");html+="</ul>",html+="</li></ul>"}$(targetElement).html(html)}}})}(jQuery);